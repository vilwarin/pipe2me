<%
  def which(*names)
    names.map do |name|
      path = `which #{name}`.chomp
      raise "Missing #{name}" if path == ""
      path
    end
  end

  daemon, sshd, nginx = which :daemon, :sshd, :nginx

  def log(process)
    process = "pipe2me"
    "#{VAR}/log/#{process}.log"
  end

  bundle = "#{ROOT}/script/bundle"
  #syslog facility and priority
  facility = "user"
  priority = "alert"
%>

set daemon 10
set httpd port <%= MONIT_PORT %> and use address localhost allow localhost

check process web with pidfile <%= VAR %>/pids/web.pid
  start program = "<%= daemon %> -N --name web --pidfiles <%= VAR %>/pids --output <%= facility%>.<%= priority %> -- <%= bundle %> exec puma -b unix:<%= VAR %>/web.sock" with timeout 60 seconds
  stop program = "<%= daemon %> -N --name web --pidfiles <%= VAR %>/pids --output <%= facility%>.<%= priority %> --stop"

check process checker with pidfile <%= VAR %>/pids/checker.pid
  start program = "<%= daemon %> -N --name checker --pidfiles <%= VAR %>/pids --output <%= facility%>.<%= priority %> -- <%= bundle %> exec rake run:check" with timeout 60 seconds
  stop program = "<%= daemon %> -N --name checker --pidfiles <%= VAR %>/pids --output <%= facility%>.<%= priority %> --stop"

# sshd is not started by daemon. daemon(1) stops processes by sending SIGTERMs.
# When receiving SIGTERMs sshd, however, only terminates when there are no more
# connections.
#
# While we need to terminate running connections by other means, we at least want
# the master process to stop - which means we want to SIGKILL it.
#
# [todo] terminate connections
check process sshd with pidfile <%= VAR %>/pids/sshd.pid
  start program = "<%= daemon %> -N --name sshd --pidfiles <%= VAR %>/pids --output <%= facility%>.<%= priority %> -- <%= sshd %> -e -d -f <%= VAR %>/config/sshd.conf " with timeout 60 seconds
  stop program = "<%= daemon %> -N --name sshd --pidfiles <%= VAR %>/pids --output <%= facility%>.<%= priority %> --stop"
  #stop program = "/bin/sh -c 'kill -9 $(cat <%= VAR %>/pids/sshd.pid)'"

check process nginx with pidfile <%= VAR %>/pids/nginx.pid
  start program = "<%= daemon %> -N --name nginx --pidfiles <%= VAR %>/pids --output <%= facility%>.<%= priority %> -- <%= nginx %> -c <%= VAR %>/config/nginx.conf " with timeout 60 seconds
  stop program = "<%= daemon %> -N --name nginx --pidfiles <%= VAR %>/pids --output <%= facility%>.<%= priority %> --stop"
